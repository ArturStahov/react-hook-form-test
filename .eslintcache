[{"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\index.js":"1","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\App.js":"2","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\redux\\store.js":"3","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\redux\\contact-action.js":"4","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactForm\\index.js":"5","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactForm\\ContactForm.js":"6","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactList\\index.js":"7","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactList\\ContactList.js":"8"},{"size":391,"mtime":1609839441861,"results":"9","hashOfConfig":"10"},{"size":237,"mtime":1609841662113,"results":"11","hashOfConfig":"10"},{"size":666,"mtime":1609840220526,"results":"12","hashOfConfig":"10"},{"size":333,"mtime":1609841373917,"results":"13","hashOfConfig":"10"},{"size":42,"mtime":1609841674133,"results":"14","hashOfConfig":"10"},{"size":4023,"mtime":1609849488663,"results":"15","hashOfConfig":"10"},{"size":42,"mtime":1609841630227,"results":"16","hashOfConfig":"10"},{"size":2600,"mtime":1609849238068,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"f8nspp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\index.js",[],["36","37"],"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\App.js",[],"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\redux\\store.js",[],"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\redux\\contact-action.js",[],"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactForm\\index.js",[],"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactForm\\ContactForm.js",["38","39","40"],"import React from 'react'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { connect } from 'react-redux'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as action from '../../redux/contact-action'\r\nimport styled from 'styled-components'\r\n\r\nconst Form = styled.form`\r\nwidth:400px;\r\nmargin:0 auto 50px;\r\ndisplay:flex;\r\njustify-content:flex-start;\r\nflex-wrap:wrap;\r\n&>.input{\r\n    width:80%;\r\n    margin-bottom:30px;\r\n}\r\n&>.button{\r\n    width:80%;\r\n}\r\n`\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ContactsForm({ onAddContact }) {\r\n    const classes = useStyles();\r\n    const { register, handleSubmit, watch, errors, control } = useForm();\r\n    const onSubmit = data => {\r\n        onAddContact(data);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                {/* register your input into the hook by invoking the \"register\" function */}\r\n                <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    render={({ onChange, value }) => <TextField className='input' id=\"standard-basic\" label=\"Name\" onChange={onChange} value={value} required />}\r\n                />\r\n\r\n                <Controller\r\n                    name=\"lastName\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    render={({ onChange, value }) => <TextField className='input' id=\"standard-basic\" label=\"lastName\" onChange={onChange} value={value} required />}\r\n                />\r\n                {/* errors will return when field validation fails  */}\r\n                {errors.exampleRequired && <span>This  is required</span>}\r\n\r\n                <Controller\r\n                    name=\"Age\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    render={({ onChange, value }) =>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={value}\r\n                                onChange={onChange}\r\n                            >\r\n                                <MenuItem value={10}>Ten</MenuItem>\r\n                                <MenuItem value={20}>Twenty</MenuItem>\r\n                                <MenuItem value={30}>Thirty</MenuItem>\r\n                            </Select>\r\n                        </FormControl>}\r\n                />\r\n\r\n                <Controller\r\n                    name=\"secondName\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    render={({ onChange, value }) => <TextField className='input' id=\"standard-basic\" label=\"secondName\" onChange={onChange} value={value} required />}\r\n                />\r\n                <Button className='button' type=\"submit\" variant=\"contained\" color=\"secondary\">Submit</Button>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddContact: (contact) => dispatch(action.addContact(contact))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsForm)","D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactList\\index.js",[],"D:\\fs-online\\REACT\\test\\react-hook-form-test\\src\\components\\ContactList\\ContactList.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":41,"column":13,"nodeType":"47","messageId":"48","endLine":41,"endColumn":21},{"ruleId":"45","severity":1,"message":"50","line":41,"column":37,"nodeType":"47","messageId":"48","endLine":41,"endColumn":42},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","'register' is assigned a value but never used.","'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]